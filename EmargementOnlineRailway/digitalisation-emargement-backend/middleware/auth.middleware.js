const jwt = require("jsonwebtoken"); // Librairie JWT

const verifyToken = (req, res, next) => {
    const authHeader = req.headers.authorization;
    console.log("üîç [verifyToken] Authorization header re√ßu :", authHeader);

    // √âtape 1 : header manquant ou mal form√©
    if (!authHeader || !authHeader.startsWith("Bearer ")) {
        console.warn("‚ùå [verifyToken] Token manquant ou ne commence pas par 'Bearer '");
        return res.status(401).json({ message: "Token manquant ou invalide" });
    }

    // √âtape 2 : r√©cup√©ration du token
    const token = authHeader.split(" ")[1];
    console.log("üßæ [verifyToken] Token extrait :", token);

    try {
        // √âtape 3 : v√©rification du token avec la cl√© secr√®te
        const decoded = jwt.verify(token, process.env.JWT_SECRET);
        console.log("‚úÖ [verifyToken] Token valide. Payload :", decoded);

        req.user = decoded;
        next();
    } catch (err) {
        console.error("‚ùå [verifyToken] Erreur v√©rification JWT :", err.message);
        return res.status(403).json({ message: "Token invalide" });
    }
};
