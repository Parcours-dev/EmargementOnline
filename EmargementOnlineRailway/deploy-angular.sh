#!/bin/bash

# =========================
# DEPLOY ANGULAR FRONT ‚Üí BACKEND (Express + Railway)
# =========================

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# √âtape 0 : s√©curit√©
set -e

# Vars
FRONT_DIR="digitalisation-emargement-frontend"
BACK_DIR="digitalisation-emargement-backend"
BUILD_OUTPUT_DIR="dist/digitalisation-emargement-frontend"  # relatif √† l‚Äôint√©rieur du dossier front
TARGET_DIR="../$BACK_DIR/public/digitalisation-emargement-frontend"

# √âtape 1 : Build Angular
echo -e "${GREEN}üì¶ 1. Build Angular en mode production...${NC}"
cd "$FRONT_DIR" || { echo -e "${RED}‚ùå Dossier frontend introuvable${NC}"; exit 1; }

# Nettoyage de l‚Äôancien build local
rm -rf "$BUILD_OUTPUT_DIR"

# Build prod
ng build --configuration production || { echo -e "${RED}‚ùå √âchec du build Angular${NC}"; exit 1; }

# V√©rification post-build
if [ ! -f "$BUILD_OUTPUT_DIR/index.html" ]; then
  echo -e "${RED}‚ùå index.html introuvable dans le build. V√©rifie ton angular.json et le build.${NC}"
  exit 1
fi

# √âtape 2 : Nettoyage du build dans le backend
echo -e "${YELLOW}üßπ 2. Nettoyage du dossier cible dans le backend...${NC}"
rm -rf "$TARGET_DIR"
mkdir -p "$TARGET_DIR"

# √âtape 3 : Copie
echo -e "${GREEN}üìÇ 3. Copie du build Angular vers le backend...${NC}"
cp -r "$BUILD_OUTPUT_DIR/"* "$TARGET_DIR"

# V√©rification post-copie
if [ ! -f "$TARGET_DIR/index.html" ]; then
  echo -e "${RED}‚ùå index.html manquant apr√®s la copie. Probl√®me pendant le transfert.${NC}"
  exit 1
fi

# √âtape 4 : Fin
echo -e "${GREEN}‚úÖ index.html copi√© avec succ√®s dans le backend !${NC}"
echo -e "${GREEN}üöÄ D√©ploiement termin√© avec succ√®s !${NC}"
echo -e "${YELLOW}üëâ Lance le serveur Express et ouvre : https://emargementonline-production.up.railway.app${NC}"
