#!/bin/bash

# =========================
# DEPLOY ANGULAR FRONT ‚Üí BACKEND (Express + Railway)
# =========================

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# √âtape 0 : s√©curit√©
set -e

# √âtape 1 : Build Angular
echo -e "${GREEN}üì¶ 1. Build Angular en mode production...${NC}"
cd digitalisation-emargement-frontend || { echo -e "${RED}‚ùå Dossier frontend introuvable${NC}"; exit 1; }

ng build --configuration production || { echo -e "${RED}‚ùå √âchec du build Angular${NC}"; exit 1; }

# V√©rifie que le dossier de build existe
BUILD_DIR="./public/digitalisation-emargement-frontend/browser"
if [ ! -f "$BUILD_DIR/index.html" ]; then
  echo -e "${RED}‚ùå index.html introuvable dans le build. V√©rifie ton angular.json et le build.${NC}"
  exit 1
fi

# √âtape 2 : Nettoyage backend
echo -e "${GREEN}üßπ 2. Nettoyage de l'ancien build dans le backend...${NC}"
cd ../digitalisation-emargement-backend || exit 1
TARGET_DIR="./public/digitalisation-emargement-frontend/browser"
rm -rf "$TARGET_DIR"
mkdir -p "$TARGET_DIR"

# √âtape 3 : Copie du nouveau build Angular vers le backend
echo -e "${GREEN}üìÇ 3. Copie du build dans Express...${NC}"
cp -r ../digitalisation-emargement-frontend/public/digitalisation-emargement-frontend/browser/* "$TARGET_DIR"

# √âtape 4 : V√©rification post-copie
if [ ! -f "$TARGET_DIR/index.html" ]; then
  echo -e "${RED}‚ùå index.html manquant apr√®s la copie. Probl√®me pendant le transfert.${NC}"
  exit 1
fi

echo -e "${GREEN}‚úÖ index.html copi√© avec succ√®s dans le backend !${NC}"

# √âtape 5 : Test manuel
echo -e "${GREEN}üöÄ 5. Test manuel : Lance ton serveur Express et acc√®de √† :${NC}"
echo "http://localhost:3000"  # Ou l'URL Railway

echo -e "${GREEN}üéâ D√©ploiement termin√© ! Tu peux maintenant tester ton front servi par Express.${NC}"
